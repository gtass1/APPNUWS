//
// Warning:  do not write 10000. as 10,000.; it will be read as two numbers (10., 0.).

bool hasFLOOR      = true;

string floor.motherVolMat = "G4_AIR";
//vector<double> g4.detSysCenter = { 0.0, 0.0, 0.0 };

vector<string> floor.materials =
  { 
  };

string floor.extFile          =    "";
double floor.z0               =      0;
double floor.x0               =      0;

int    floor.geomType         =    00;   //decimal digit:magior version, unit digit:minor version  
                                       //  00:dummy geometry, the ladder has cylindrical shape instead of plane, there are no supports and others details

//double floor.voxelization     =     0;   //Choose voxelization method for the gas volumes that contain wires, negative: default computation, 0: voxelization off, positive: smartless value

bool   floor.doDetailedSurfCheck = false;
bool   floor.debugLayer       = false;

// Top Vertical Cosmic detecor parameters

// The First Side will be placed along the Z axis of the refernce system
// The Second Side will be placed along the X axis of the refernce system

double floor.Length                                    = 20000; //Plane or Skeleton length

//Plane description
double floor.PlaneWidth                                = 4000;
double floor.PlaneThicknes                             = 200;
string floor.FullPlaneEqMaterial                       = "G4_CONCRETE"; //if it is null than the plane is made by ribs
//If the plane is made only with ribs instead of a full plane

//Optional Skeleton Plane description
string floor.SkeletonEqMaterial                        = "G4_Fe";
int floor.nSkeletonShafts                              = 0;
int floor.SkeletonShaftShape                           = 0; //0: full, 1: Shell; 2: I shaped, 3: C shaped
double floor.SkeletonShaftsInterDist                   = 0; //optional: or assuming constant distance between ribs or use assigned postion
vector<double> floor.SkeletonShaftsPos                 = { }; //optional: it is used if InterDist is 0.0
double floor.SkeletonShaftWidth                        = 0;
double floor.SkeletonShaftHeight                       = 0; //Shaft with I profile, Height is its total Height/Thickness
double floor.SkeletonShaftThicknesExt                  = 0;
double floor.SkeletonShaftThicknesCent                 = 0;

int floor.nSkeletonRibs                                = 0;
int floor.SkeletonRibShape                             = 0; //0: full, 1: Shell; 2: I shaped, 3: C shaped
double floor.SkeletonRibsInterDist                     = 0; //optional: or assuming constant distance between ribs or use assigned postion
vector<double> floor.SkeletonRibsPos                   = { }; //optional: it is used if InterDist is 0.0
double floor.SkeletonRibWidth                          = 0;
double floor.SkeletonRibHeight                         = 0; //Shaft with I profile, Height is its total Height/Thickness
double floor.SkeletonRibThicknesExt                    = 0;
double floor.SkeletonRibThicknesCent                   = 0;


//
// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
