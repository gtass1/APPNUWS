//
// Warning:  do not write 10000. as 10,000.; it will be read as two numbers (10., 0.).

bool hasCSMBT      = true;

string csmbt.motherVolMat = "G4_AIR";
//vector<double> g4.detSysCenter = { 0.0, 0.0, 0.0 };

vector<string> csmbt.materials =
  { "GasAr_70CO2_30", "Nomex", "NomexHC48", "AlHC59"
  };

string csmbt.extFile          =    "";
double csmbt.z0               =      0;

int    csmbt.geomType         =    00;   //decimal digit:magior version, unit digit:minor version  
                                       //  00:dummy geometry, the ladder has cylindrical shape instead of plane, there are no supports and others details

//double csmbt.voxelization     =     0;   //Choose voxelization method for the gas volumes that contain wires, negative: default computation, 0: voxelization off, positive: smartless value

bool   csmbt.doDetailedSurfCheck = false;
bool   csmbt.debugLayer       = false;

// Top Vertical Cosmic detecor parameters

// The First Side will be placed along the Z axis of the refernce system
// The Second Side will be placed along the X axis of the refernce system

int    csmbt.nLayers                        = 3;
vector<double> csmbt.LayersVertPos          = { -1550.0, -1050.0, -550.0 };
//vector<double> csmbt.LayersFstSidePos       = { -4000.0, -4000.0, -4000.0 };
vector<double> csmbt.LayersFstSidePos       = { -7500.0, -7500.0, -7500.0 };
vector<double> csmbt.LayersSndSidePos       = { -2000.0, -2000.0, -2000.0 };
//vector<int> csmbt.nLaddersPerFstSide        = { 16, 16, 16 };
vector<int> csmbt.nLaddersPerFstSide        = { 30, 30, 30 };
vector<int> csmbt.nLaddersPerSndSide        = { 10, 10, 10 };
vector<double> csmbt.LaddersFstSideDim      = { 500, 500, 500 };  // First Side dimension of the Ladder per eah Layer
vector<double> csmbt.LaddersDeadZoneFstSide = { 10, 10, 10 }; // Non active area on the ladder, including Support Frames and other services
vector<double> csmbt.SpaceBtwnLadFstSide    = { 0, 0, 0 }; // Per Layer
vector<double> csmbt.LaddersSndSideDim      = { 400, 400, 400 };  // Second Side dimension of the Ladder per eah Layer
vector<double> csmbt.LaddersDeadZoneSndSide = { 10, 10, 10 };  // Non active area on the ladder, including Support Frames and other services
vector<double> csmbt.SpaceBtwnLadSndSide    = { 0, 0, 0 }; // Per Layer
vector<double> csmbt.LaddersTotThickness    = { 16, 16, 16 }; // Per Layer
vector<int> csmbt.ROTypes                   = { 1, 1, 1 }; //1: Pixel; 2: Strip // Per Layer
vector<double> csmbt.ROfirstSideDim         = { 0.08, 0.08, 0.08 }; // Per Layer
vector<double> csmbt.ROfirstSideInsul       = { 0.32, 0.32, 0.32 }; // Per Layer
vector<double> csmbt.ROSecondSideDim        = { 0.34, 0.34, 0.34 }; // Per Layer
vector<double> csmbt.ROSecondSideInsul      = { 0.06, 0.06, 0.06 }; // Per Layer
vector<double> csmbt.ROangle                = { 0.0, 0.0, 0.0 }; // Per Layer

// First Layer Ladder description
int    csmbt.l1.ld.nShells =      24;
vector<string> csmbt.l1.ld.ShellsMaterial = { "G4_Al", "AlHC59", "G4_KAPTON", "G4_Cu", "GasAr_70CO2_30", "G4_Cu", "G4_KAPTON", "G4_Cu", "GasAr_70CO2_30", "G4_Cu", "G4_KAPTON", "G4_Cu", "GasAr_70CO2_30", "G4_Cu", "G4_KAPTON", "G4_Cu", "GasAr_70CO2_30", "G4_Cu", "G4_KAPTON", "G4_Cu", "Epotek301", "G10_FR4", "AlHC59", "G4_Al" };
vector<double> csmbt.l1.ld.ShellsThickness = { 0.25, 3.00, 0.05, 0.005, 3.00, 0.005, 0.05, 0.005, 2.00, 0.005, 0.05, 0.005, 2.00, 0.005, 0.05, 0.005, 2.00, 0.005, 0.05, 0.005, 0.085, 0.12, 3.00, 0.25 };
int    csmbt.l1.ro.nShells =      1; //2;
vector<int> csmbt.l1.ro.ShellIds = { 4 }; //{ 17, 19 };  //id of the ladder shells

// Second Barrel Layer Ladder description
int    csmbt.l2.ld.nShells =      24;
vector<string> csmbt.l2.ld.ShellsMaterial = { "G4_Al", "AlHC59", "G4_KAPTON", "G4_Cu", "GasAr_70CO2_30", "G4_Cu", "G4_KAPTON", "G4_Cu", "GasAr_70CO2_30", "G4_Cu", "G4_KAPTON", "G4_Cu", "GasAr_70CO2_30", "G4_Cu", "G4_KAPTON", "G4_Cu", "GasAr_70CO2_30", "G4_Cu", "G4_KAPTON", "G4_Cu", "Epotek301", "G10_FR4", "AlHC59", "G4_Al" };
vector<double> csmbt.l2.ld.ShellsThickness = { 0.25, 3.00, 0.05, 0.005, 3.00, 0.005, 0.05, 0.005, 2.00, 0.005, 0.05, 0.005, 2.00, 0.005, 0.05, 0.005, 2.00, 0.005, 0.05, 0.005, 0.085, 0.12, 3.00, 0.25 };
int    csmbt.l2.ro.nShells =      1;
vector<int> csmbt.l2.ro.ShellIds = { 4 };  //id of the ladder shells

// Third Barrel Layer Ladder description
int    csmbt.l3.ld.nShells =      24;
vector<string> csmbt.l3.ld.ShellsMaterial = { "G4_Al", "AlHC59", "G4_KAPTON", "G4_Cu", "GasAr_70CO2_30", "G4_Cu", "G4_KAPTON", "G4_Cu", "GasAr_70CO2_30", "G4_Cu", "G4_KAPTON", "G4_Cu", "GasAr_70CO2_30", "G4_Cu", "G4_KAPTON", "G4_Cu", "GasAr_70CO2_30", "G4_Cu", "G4_KAPTON", "G4_Cu", "Epotek301", "G10_FR4", "AlHC59", "G4_Al" };
vector<double> csmbt.l3.ld.ShellsThickness = { 0.25, 3.00, 0.05, 0.005, 3.00, 0.005, 0.05, 0.005, 2.00, 0.005, 0.05, 0.005, 2.00, 0.005, 0.05, 0.005, 2.00, 0.005, 0.05, 0.005, 0.085, 0.12, 3.00, 0.25 };
int    csmbt.l3.ro.nShells =      1;
vector<int> csmbt.l3.ro.ShellIds = { 4 };  //id of the ladder shells

// CSMBT Absorbers
//int    csmbt.nAbsLayers     = 2;
// First Absorber shell description
//double csmbt.abs.l1.InRad   = 2015.0;
//double csmbt.abs.l1.halfLength = 2400.0;
//int    csmbt.abs.l1.nShells =      1;
//vector<string> csmbt.abs.l1.ShellsMaterial = { "G4_Pb" };
//vector<double> csmbt.abs.l1.ShellsThickness = { 6 };

// Second Absorber shell description
//double csmbt.abs.l2.InRad   = 2035.0;
//double csmbt.abs.l2.halfLength = 2400.0;
//int    csmbt.abs.l2.nShells =      1;
//vector<string> csmbt.abs.l2.ShellsMaterial = { "G4_Pb" };
//vector<double> csmbt.abs.l2.ShellsThickness = { 6 };

//
// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
